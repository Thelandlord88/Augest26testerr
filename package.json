{
  "name": "ondlive-main",
  "version": "1.0.0",
  "description": "A website for One N Done Bond Clean.",
  "main": "index.js",
  "type": "module",
  "private": true,
  "engines": { "node": ">=20 <21" },
  "scripts": {
  "pages:discover": "node scripts/discover-pages.mjs",
  "pages:to-tests": "node scripts/gen-test-routes.mjs",
  "pages:promote": "node scripts/promote-test-routes.mjs --all",
  "pages:promote:match": "node scripts/promote-test-routes.mjs --match",
  "predev": "node scripts/predev.mjs",
  "dev": "node scripts/guard-deno.js && node scripts/dev-port.mjs",
  "start": "node scripts/guard-deno.js && node scripts/dev-port.mjs",
  "build": "npm run build:faqs && USE_NETLIFY=1 astro build && node scripts/consolidate-ld.mjs && node scripts/audit-related-links.mjs && npm run validate:schema && npm run check:links",
  "env:print": "node scripts/check-env.js",
    "build:faqs": "node scripts/build-faqs.mjs",
  "preview": "astro preview --port 4322 --host",
  "serve:redirects": "node scripts/serve-with-redirects.mjs -d dist -p 4322",
  "serve:dist": "npx --yes serve -s dist -l 4322",
  "test": "playwright test",
  "test:all": "npm run test:unit && npm run test:e2e",
  "test:ui": "playwright test --ui",
  "test:headed": "playwright test --headed",
    "cypress:run": "BASE_URL=http://localhost:4322 cypress run",
    "test:jest": "node --experimental-vm-modules ./node_modules/jest/bin/jest.js",
    "test:data": "node scripts/validate-data.js",
    "validate:schema": "node -r tsconfig-paths/register ./scripts/validate-schema.js",
    "test:faqs": "node scripts/validate-faqs.js",
    "validate:footer": "node scripts/validate-footer-links.js",
    "ai:visual": "node scripts/ai-critique.mjs",
    "ai:copy": "node scripts/ai-copy-lint.mjs",
    "ai:review": "npm run ai:visual && npm run ai:copy",
    "ai:intent": "node scripts/ai-intent-lint.js",
    "ai:enrich": "node scripts/ai-enrichment-critic.js",
    "graph:audit": "node scripts/audit-graph.mjs",
    "ai:intent:rewrite:src": "node scripts/rewrite-intent-anchors.mjs --mode=src",
    "ai:intent:rewrite:src:write": "node scripts/rewrite-intent-anchors.mjs --mode=src --write",
    "ai:intent:rewrite:dist": "node scripts/rewrite-intent-anchors.mjs --mode=dist --write",
    "ai:intent:verify:src": "node scripts/intent-anchors-verify.mjs --mode=src",
    "ai:intent:verify:dist": "node scripts/intent-anchors-verify.mjs --mode=dist",
    "ai:toc": "node scripts/gen-toc.mjs",
    "ai:baseline": "npm run ai:baseline:prep && npm run ai:baseline:build && node scripts/report-ld.mjs && node scripts/report-ld-sources.mjs && node scripts/ui-grep.mjs && npm run ai:baseline:redirects",
    "ai:ld-report": "node scripts/report-ld.mjs",
    "ai:ld-sources": "node scripts/report-ld-sources.mjs",
    "ai:baseline:prep": "node -e \"require('fs').mkdirSync('__ai',{recursive:true})\"",
    "ai:baseline:build": "node scripts/run-build-and-log.mjs",
    "ai:baseline:redirects": "node -e \"const fs=require('fs');fs.copyFileSync('public/_redirects','__ai/redirects.txt');console.log('Saved __ai/redirects.txt')\"",
    "ai:redirects:check": "node scripts/redirect-canary.mjs",
    "ai:validate:redirects": "node scripts/validate-redirects.mjs",
    "ai:links": "node scripts/extract-internal-links.mjs",
    "ai:refactor:scan": "node scripts/refactor-scan.mjs",
    "ai:refactor:whatif": "node scripts/refactor-whatif.mjs",
    "ai:refactor:fix:dry": "node scripts/refactor-fix.mjs",
    "ai:refactor:fix": "node scripts/refactor-fix.mjs --write",
    "ai:clusters:migrate:dry": "node scripts/cluster-alias-migrate.mjs",
    "ai:clusters:migrate": "node scripts/cluster-alias-migrate.mjs --write",
    "rename:rehearse": "node scripts/rename-rehearse.mjs",
    "ci:verify-graph": "npm run build --silent && npm run graph:audit",
    "routes:audit": "node scripts/audit-routes.mjs",
  "prebuild": "node scripts/cleanup-strays.mjs && node scripts/expand-coverage.mjs && node scripts/build-cross-service-map.mjs && npm run routes:audit && node scripts/verify-blog-base.mjs",
    "health": "STRICT=0 bash scripts/health.sh",
    "health:full": "STRICT=1 bash scripts/health.sh full",
    "ai:ld-health": "MIN_PAGES_WITH_LD=5 node scripts/assert-ld-health.mjs",
    "ai:site:audit": "node scripts/assert-site-config.mjs",
    "ai:site:audit:add-helper": "node scripts/assert-site-config.mjs --add-helper",
    "ai:blog:verify": "node scripts/verify-blog-base.mjs",
    "ai:blog:verify:ext": "node scripts/verify-blog-base-extended.mjs",
    "ai:clean:strays": "node scripts/cleanup-strays.mjs",
    "ai:blog:codemod:dry": "node scripts/codemod-blog-base.mjs --dry",
    "ai:blog:codemod:write": "node scripts/codemod-blog-base.mjs --write",
    "ai:blog:codemod:ci": "node scripts/codemod-blog-base.mjs --dry && node -e \"const fs=require('fs'); const path='./__ai/codemod-blog-base.txt'; const r=JSON.parse(fs.readFileSync(path,'utf8')); if((r.touched||0)>0){ console.error('Codemod drift: '+r.touched+' file(s)'); process.exit(1);} else { console.log('Codemod drift: none');}\"",
  "postbuild": "node scripts/audit-related-links.mjs && node scripts/assert-no-alias-build.mjs && node scripts/report-ld.mjs && node scripts/report-ld-sources.mjs && node scripts/assert-sitemap-blog-canonicals.mjs && npm run ai:ld-health && node scripts/audit-internal-links.mjs && node scripts/audit-cross-links.mjs",
  "audit:internal-links": "node scripts/audit-internal-links.mjs",
  "audit:cross": "node scripts/audit-cross-links.mjs",
  "test:unit": "vitest run --reporter=dot",
  "kb:gen": "node scripts/generate-knowledge-base.mjs",
  "kb:open": "node scripts/generate-knowledge-base.mjs && sed -n '1,120p' REPO_FILES.md",
  "check:links": "node scripts/check-internal-links.mjs",
  "audit:geo": "node scripts/audit-geo-data.mjs",
  "test:e2e": "playwright test -c playwright.config.ts",
  "test:e2e:update": "playwright test -u -c playwright.config.ts",
  "usages:geo": "node scripts/find-geo-usages.mjs",
  "prepare": "husky",
  "report:unused-js": "node scripts/scan-unused-js.mjs",
  "unused:allowlist": "node scripts/build-unused-allowlist.mjs --min 3 --include \"src/utils/**\" --include \"src/legacy/**\" --exclude \"cypress/**\" > __reports/unused-allowlist.txt",
  "quarantine:dryrun": "node scripts/quarantine-files.mjs --list __reports/unused-allowlist.txt",
  "quarantine:apply": "node scripts/quarantine-files.mjs --list __reports/unused-allowlist.txt --apply",
  "quarantine:restore": "node scripts/quarantine-files.mjs --restore",
  "lint": "eslint . --ext .js,.cjs,.mjs,.ts,.tsx,.astro",
  "lint:fix": "npm run lint -- --fix",
  "schema:hash": "node scripts/test-schema-hash.mjs",
  "legacy:find": "node scripts/find-legacy.mjs",
  "typecheck": "tsc -p tsconfig.playwright.json --noEmit",
  "verify:yaml": "node scripts/verify-no-tabs.mjs"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@astrojs/tailwind": "^6.0.2",
    "@axe-core/playwright": "^4.10.2",
    "@lhci/cli": "^0.15.1",
    "@playwright/test": "^1.49.1",
    "@typescript-eslint/eslint-plugin": "^8.36.0",
    "@typescript-eslint/parser": "^8.36.0",
  "eslint-plugin-astro": "^1.3.0",
  "globals": "^15.11.0",
    "astro": "^5.11.0",
    "cypress": "^14.5.3",
    "dotenv": "^17.2.1",
    "eslint": "^9.30.1",
  "eslint-plugin-import": "^2.29.1",
  "eslint-plugin-unused-imports": "^4.2.0",
    "globby": "^14.0.2",
    "husky": "^9.1.7",
    "jest": "^30.0.4",
    "jest-environment-jsdom": "^30.0.4",
    "micromatch": "^4.0.8",
    "node-html-parser": "^7.0.1",
    "openai": "^4.57.0",
    "prettier": "^3.6.2",
    "prettier-plugin-astro": "^0.14.1",
    "tsconfig-paths": "^4.2.0",
  "typescript": "^5.8.3",
  "vitest": "^2.1.9",
  "serve": "^14.2.1",
  "wait-on": "^7.0.1"
  },
  "overrides": {
    "esbuild": "^0.25.8"
  },
  "dependencies": {
  "@astrojs/netlify": "^6.4.1",
    "playwright": "^1.55.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "haversine-distance": "^1.2.1"
  }
}
