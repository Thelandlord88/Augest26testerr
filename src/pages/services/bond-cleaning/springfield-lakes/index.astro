---
import services from '~/data/services.json';
import suburbs from '~/data/suburbs.json';
import coverage from '~/data/serviceCoverage.json' assert { type: 'json' };
import MainLayout from '~/layouts/MainLayout.astro';
import SchemaGraph from '~/components/SchemaGraph.astro';
import slugify from '~/utils/slugify.js';
import FaqBlock from '~/components/FaqBlock.astro';
import faqBond from '~/content/faq.service-bond.json';
import faqSpring from '~/content/faq.service-spring.json';
import faqBathroom from '~/content/faq.service-bathroom.json';

export async function getStaticPaths() {
  return services.map(svc => ({ params: { service: svc.slug }, props: { service: svc } }));
}

// Use provided service prop when present; otherwise fall back to a default
const service = (Astro.props && Astro.props.service)
  ? Astro.props.service
  : (Array.isArray(services) && services.length
    ? (services.find(s => s.slug === 'bond-cleaning') || services[0])
    : { slug: '', title: 'Services', description: 'Service information' });
const title = service.slug === 'spring-cleaning'
  ? 'Spring Cleaning Ipswich & Brisbane | One N Done'
  : `${service.title || service.name} – Professional ${service.title || service.name} in Brisbane, Logan & Ipswich`;
const description = service.slug === 'spring-cleaning'
  ? 'Top-to-bottom spring cleaning — kitchens, bathrooms, fans & tracks. Police-checked, insured, 7-day re-clean. Get a fast quote today.'
  : service.description;
import { absoluteUrl } from '~/lib/url';
const canonical = absoluteUrl(`/services/${service.slug}/`);
// Build Popular Areas from coverage whitelist intersected with static suburb pages; cap to 3
const covered = Array.isArray((coverage as any)[service.slug]) ? (coverage as any)[service.slug] : [];
const known = new Set(suburbs.map(s => s.slug));
const top3 = covered.filter((slug: string) => known.has(slug)).slice(0, 3);
const list = suburbs.filter(s => top3.includes(s.slug));
// Minimal breadcrumb for hubs (Services > Service)
const siteUrl = (import.meta.env.SITE || 'https://onendonebondclean.com.au');
const breadcrumb = {
  itemListElement: [
    { '@type': 'ListItem', position: 1, name: 'Services', item: new URL('/services', siteUrl).toString() },
    { '@type': 'ListItem', position: 2, name: service.title }
  ]
};
---
<MainLayout title={title} description={description} canonical={canonical} breadcrumb={breadcrumb}>
  <Fragment slot="head">
    {service.slug === 'bond-cleaning' && (
      <SchemaGraph graph={[
        {
          '@type': 'Offer',
          name: 'Bond Cleaning Offer',
          category: 'bond-cleaning',
          // Keep conservative: minimal fields to satisfy type presence without pricing semantics
          url: canonical,
          itemOffered: { '@type': 'Service', name: service.title }
        }
      ]} />
    )}
  </Fragment>
  <section class="max-w-6xl mx-auto px-4 py-12">
    <h1 class="text-4xl font-extrabold text-deep-navy">{service.title || service.name}</h1>
    <p class="mt-3 text-lg text-gray-warm-700 max-w-3xl">{service.description}</p>

    {/* Service-specific CTA */}
    <div class="mt-6">
      <a href="#quote" class="inline-flex items-center gap-2 bg-sky-700 hover:bg-sky-800 text-white font-bold px-5 py-3 rounded-full shadow focus-visible:ring-4 focus-visible:ring-sky-500/40 transition">
        {service.slug === 'spring-cleaning' ? 'Get a Spring Clean Quote' : service.slug === 'bathroom-deep-clean' ? 'Book a Bathroom Deep Clean' : 'Get a Bond Clean Quote'}
      </a>
    </div>

  <h2 class="mt-10 text-2xl font-bold text-deep-navy">Popular Areas</h2>
    <ul class="mt-4 grid sm:grid-cols-2 md:grid-cols-3 gap-3">
      {list.map(sub => (
        <li>
          <a href={`/services/${service.slug}/${slugify(sub.name)}/`} class="block bg-white px-4 py-3 rounded-xl shadow-sm border border-gray-warm-200 hover:shadow-lg hover:border-fresh-sky/60 text-deep-navy hover:text-fresh-sky transition">
            {sub.name}
          </a>
        </li>
      ))}
    </ul>
  </section>
  {/* Bond-cleaning proof & policy callouts */}
  {service.slug === 'bond-cleaning' && (
    <section class="max-w-6xl mx-auto px-4 py-8">
      <div class="grid md:grid-cols-2 gap-6">
        <div class="bg-white rounded-xl border border-gray-warm-200 p-5 shadow-sm">
          <h3 class="text-xl font-semibold text-deep-navy">Agent‑ready checklist</h3>
          <p class="mt-2 text-gray-warm-700">We clean to the expectations of local property managers: kitchens and appliances exteriors, bathrooms and grout detail, tracks and sills, fans and fittings, skirting, switches, floors and more.</p>
        </div>
        <div class="bg-white rounded-xl border border-gray-warm-200 p-5 shadow-sm">
          <h3 class="text-xl font-semibold text-deep-navy">7‑day re‑clean support</h3>
          <p class="mt-2 text-gray-warm-700">If your agent flags a reasonable miss within 7 days, we’ll return to make it right. Simple, fair and fast.</p>
        </div>
      </div>
    </section>
  )}
  {/* Inclusions grid (brief) */}
  <section class="max-w-6xl mx-auto px-4 py-8">
    <h2 class="text-2xl font-bold text-deep-navy">What’s included</h2>
    <ul class="mt-4 grid sm:grid-cols-2 md:grid-cols-3 gap-3 text-gray-warm-800">
      {service.checklist?.map((it) => (
        <li class="bg-white px-4 py-3 rounded-xl border border-gray-warm-200 shadow-sm">{it}</li>
      ))}
    </ul>
  </section>
  <section class="max-w-6xl mx-auto px-4 py-6">
    <FaqBlock items={(service.slug === 'bond-cleaning' ? faqBond.items : service.slug === 'spring-cleaning' ? faqSpring.items : faqBathroom.items)} headline={`${service.title || service.name} FAQs`} />
  </section>
</MainLayout>
